
Problem 1:
  Exercise 1: Wait till office hours Sunday
  Exercise 2: Wait till office hours Sunday


Problem 2:
  Exercise 1: **INSERT COMPILES**
              insert (see notes in file). 

              fold_quad () notes:   
              let rec fold_left facc xs =
                match xs with
                [] -> acc
                |x :: xs' -> fold_left f (facc x) xs

              **FOLD_QUAD COMPILES** 
              let rec fold_quad
                 leaf-> function acc (coord*b') (*objectlist*)
                  |Node -> fold_quad(function(fold_quad_function(fold_Quad
                   function 1st quad second quad ....)))


              **UNDERCONSTRUCTION**
   			   fold_region: check leaves and region for correct coordinantes. Test using exercise 2
           what should we be checking though... 
           1. whether a subtree is contained in the region?
              bc that means we'll miss some subtree/leaves that are only partially inside the region.
           2. whether a region is contained in the subtree?
              well, if it is .. what do we do after that? we'll reach a point where the region is larger
              than our subtrees... 
           I think 1. is the way to go with this but I need to think a bit.




  Exercise 2: Todo: 
              load_city_data: create tree and use parser to insert lines to tree

              city_search: implement using variation of fold_region

Problem 3:
  Exercise 2: *COMPILES AND IS TESTED (except note on commit)*
 

  Exercise 3: **COMPILES AND IS TESTED***


  Exercise 4: Will wait till office hours Sunday to discuss
  Exercise 5: Will wait till office hours Sunday to discuss